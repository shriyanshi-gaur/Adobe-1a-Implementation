{
  "title": "JTG Problem List",
  "outline": [
    {
      "level": "H1",
      "text": "Q. Given a linked list, how do you ensure that it is in decreasing order?",
      "page": 1
    },
    {
      "level": "H1",
      "text": "Q. Divide Chocolates -",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 1
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 1
    },
    {
      "level": "H1",
      "text": "Q. Merge Two Binary Trees",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 2
    },
    {
      "level": "H1",
      "text": "Q. Divide Chocolates",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 2
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 3
    },
    {
      "level": "H1",
      "text": "Q. K Largest Elements",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 3
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 4
    },
    {
      "level": "H1",
      "text": "Q. 0/1 Knapsack Problem",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 4
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 4
    },
    {
      "level": "H1",
      "text": "Q. Size of Largest BST in a Binary Tree",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 5
    },
    {
      "level": "H1",
      "text": "Q. Longest Common Subsequence",
      "page": 5
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 6
    },
    {
      "level": "H1",
      "text": "Q. Longest Palindromic Substring",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 6
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 6
    },
    {
      "level": "H1",
      "text": "Q. Rotate Linked List",
      "page": 7
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 7
    },
    {
      "level": "H1",
      "text": "Q. Balanced Binary Trees -",
      "page": 7
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 7
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 7
    },
    {
      "level": "H1",
      "text": "Q. Wave Array Sorting Problem",
      "page": 7
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 7
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 8
    },
    {
      "level": "H1",
      "text": "Q. Validate Binary Tree Nodes Problem",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 8
    },
    {
      "level": "H1",
      "text": "Q. Find Nodes at Distance K in a Binary Tree",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 8
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 9
    },
    {
      "level": "H1",
      "text": "Q. Maximum Sum BST -",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 9
    },
    {
      "level": "H1",
      "text": "Q. Pair Sum in BST -",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 9
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 10
    },
    {
      "level": "H1",
      "text": "Q. Last Stone Weight Problem",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 10
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 10
    },
    {
      "level": "H1",
      "text": "Q. Given a linked list, how do you ensure that it is in decreasing order?",
      "page": 11
    },
    {
      "level": "H1",
      "text": "Q. Sort Linked List Based on Actual Values",
      "page": 11
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 11
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 12
    },
    {
      "level": "H1",
      "text": "Q. Find Unique Element in Array",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 12
    },
    {
      "level": "H1",
      "text": "Q. Zig-Zag Array Rearrangement",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 12
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 13
    },
    {
      "level": "H1",
      "text": "Q. Inorder Successor in a Binary Tree",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 13
    },
    {
      "level": "H1",
      "text": "Q. Huffman Coding Challenge",
      "page": 13
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 14
    },
    {
      "level": "H1",
      "text": "Q. Ways To Make Coin Change",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 14
    },
    {
      "level": "H1",
      "text": "Q. Remove BST Keys Outside Given Range",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 14
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Constraints:",
      "page": 15
    },
    {
      "level": "H1",
      "text": "Q. Segregate Odd-Even -",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 15
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 16
    },
    {
      "level": "H1",
      "text": "Q. Check If Linked List Is Palindrome",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 16
    },
    {
      "level": "H1",
      "text": "Q. Balanced Parentheses Combinations",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 16
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 17
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 17
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 17
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 17
    },
    {
      "level": "H1",
      "text": "Q. Intersection of Linked List Problem",
      "page": 17
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 17
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 17
    },
    {
      "level": "H1",
      "text": "Q. Rearrange Linked List -",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 18
    },
    {
      "level": "H1",
      "text": "Q. Flatten Binary Tree to Linked List",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 18
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 19
    },
    {
      "level": "H1",
      "text": "Q. Add Two Numbers Represented by Linked Lists",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 19
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 19
    },
    {
      "level": "H1",
      "text": "Q. Multiply Linked Lists",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 20
    },
    {
      "level": "H1",
      "text": "Q. Railway Seat Berth Determination",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 20
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 21
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 21
    },
    {
      "level": "H1",
      "text": "Q. Matrix Symmetry Check",
      "page": 21
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 21
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 21
    },
    {
      "level": "H1",
      "text": "Q. Spiral Matrix Path -",
      "page": 21
    },
    {
      "level": "H2",
      "text": "Input:",
      "page": 21
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 22
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 22
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 22
    },
    {
      "level": "H1",
      "text": "Q. Most Frequent Non-Banned Word Problem",
      "page": 22
    },
    {
      "level": "H2",
      "text": "Example:",
      "page": 22
    },
    {
      "level": "H2",
      "text": "Output:",
      "page": 22
    },
    {
      "level": "H2",
      "text": "Explanation:",
      "page": 22
    }
  ]
}